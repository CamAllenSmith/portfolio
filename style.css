/* #region FONTS & VARIABLES */
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap%27');
@import url("https://fonts.googleapis.com/css?family=Montserrat:100");
@font-face {
    font-family: 'AmaticSC-Regular';
    src: url('font/AmaticSC-Regular.ttf') format('truetype');
}
@font-face {
    font-family: 'BrownBagLunch';
    src: url('font/BrownBagLunch.ttf') format('truetype');
}
@font-face {
    font-family: 'Amsterdam Laviera';
    src: url('font/Amsterdam Laviera.ttf') format('truetype');
}
:root {
    --text-color: #222;
    --acent-color: #848484;
}
/* #endregion */


body,#home {
    background-image: url('img/topographic.jpg');
    background-size: auto;
    background-repeat: repeat !important;
}

body {
    margin: 0;
    color: var(--text-color);
    font-size: 1.6em;
    min-width: 400px;
}

@media (max-device-width:968px) {
    body { font-size: 1em; }
}

body, body button {
    font-family: 'Open Sans', sans-serif; 
}

/* #region home */
#home {
    height: 100vh;
    position: sticky;
    top: calc(-100vh + 3em);
}

@media screen and (max-width:720px) {
    #home {
        font-size: 1em;
    }
}

#home > .column {
    margin: auto 0;
    
}

/* #region scanlines */
.scanlines {
    overflow: hidden;
    mix-blend-mode: difference;
}

    .scanlines::before {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background: repeating-linear-gradient(to bottom, transparent 0%, rgba(255, 255, 255, 0.1) 0.5%, transparent 1%);
        animation: fudge 7s ease-in-out alternate infinite;
    }

@keyframes fudge {
    from {
        transform: translate(0px, 0px);
    }

    to {
        transform: translate(0px, 2%);
    }
}
/* #endregion */

#home .glitch {
    font-weight: normal;
    font-size: 5em;
    margin-bottom: 0;
    color: white;
    font-family: 'Amsterdam Laviera';
    text-align: center;
    line-height: 0.65em;
}
/* #region title */
#home .title {
    font-size: 1.5em;
    color: white;
    color: white !important;
    line-height: 0.85em;
    padding: 0 0.25em 0.1em 0.15em;
    border-radius: 0.1em;
    flex-grow: 100;
    display: flex;
    align-items: center;
}
#home .title::after {
    content: "...";
}
/* #endregion */

/* #region socials */
#home .socials {
    position: absolute;
    top: 0.5em;
    right: 0.75em;
    font-size: 0.5em;
    align-items: flex-end;
}

    #home .socials a { font-size: 4em;}

    .socials a {
        text-decoration: none;
        color: white;
        cursor: pointer;
    }
    .socials a:hover {
        color: red;
    }

        @media screen and (max-width: 968px) {
            #home .socials {
                flex-direction: row;
                grid-column-gap: 1em;
            }
        }
/* #endregion */


/* #region profile */
#home .profile {
    border-radius: 100%;
    overflow: hidden;
    border: 2px solid white;
    width: 8em;
    height: 8em;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 0 15px red;
}
    #home .profile img {
        width: 180%;
        animation: spin 5s infinite;
    }
@keyframes spin {


    25% {
        opacity: 1;
        -webkit-filter: none;
    }
    50% {
        opacity: 0.75;
        -webkit-filter: blur(2px);
    }
    75% {
        opacity: 1;
        -webkit-filter: none;
    }
}

/* #endregion */
#home canvas {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -2;
}

/* #region rain */
#rain {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    background: rgba(0,0,0,0.75);
}
#rain div {
    min-width: 3em;
    width: 10%; /*2.3em;*/
    height: 2em; /* height doesnt really matter that much, want it to be big enough to where it always fits. this also determines the center of rotation */
    opacity: 0; /* invisible until animation starts*/
    display: inline-block;
    position: relative;
    background-size: contain;
    background-repeat: no-repeat;
    animation: rain 5s infinite linear;
}
#rain div.money { background-image: url('img/money.jpg'); }
#rain div.gtx { background-image: url('img/3090.png'); }
#rain div.wow { background-image: url('img/wow.png'); }
#rain div.dscim { background-image: url('img/dscim.png'); }
#rain div:nth-child(4n-4) { animation-delay: .5s; }
#rain div:nth-child(5n+3) { animation-delay: .75s; }
#rain div:nth-child(3n-3) { animation-delay: 1.5s; }
#rain div:nth-child(2n+5) { animation-delay: 2s; }
#rain div:nth-child(3n+10) { animation-delay: 2.5s; }
#rain div:nth-child(7n+5) { animation-delay: 3s; }
#rain div:nth-child(4n+5) { animation-delay: 3.25s; }
#rain div:nth-child(3n+7) { animation-delay: 4s; }
@keyframes rain {
    0% { opacity: 1; transform: translate(0, -5vh) rotateZ(0deg); }
    75% { opacity: 1; transform: translate(100px, 75vh) rotateZ(270deg); }
    100% { opacity: 0; transform: translate(150px, 95vh) rotateZ(360deg); }
}
/* #endregion money rain */

/* #endregion */

/* #region nav */
body > nav, #navbar_bg {
    position: sticky;
    top: 0;
    height: 3em;
    margin-top: -3em;
}
/*#navbar_bg {
    background: #333;
    z-index: 98;
}*/
#home { z-index: 99 }
body > nav {
    z-index: 100;
    border-bottom: 1px solid black;
}
body > nav button {
    cursor: pointer;
    background: transparent;
    border: none;
    outline: none;
    color: white;
    padding: 0 1em;
    font-size:1em;
    text-transform: uppercase;
    height: 100%;
    display: flex;
    align-items: center;
    column-gap: 0.5em;
}
body > nav button:hover {
    background: white;
    color: black !important;
    border-color: white !important;
}
body > nav button.selected {
    color: cyan;
    font-weight: bold;
    border-bottom: 2px solid cyan;
}
@media screen and (max-width: 840px) {
    body > nav button[data-section="home"] { display: none }
}
@media screen and (max-width: 720px) {
    body > nav { grid-column-gap: 0.5em !important; }
    body > nav button { padding: 0 0.5em; }
    body > nav button i { display: none !important; }
}
/* #endregion */

/* #region content sections */
#content {
    margin: 0 auto;
    box-shadow: 0px 0px 15px 5px rgba(0,0,0,0.5);
    width: 1200px;
    max-width: 100%;
}
@media screen and (min-width: 2400px) {
    #content { width: 1600px; }
}

#content > section {
    height: auto; /* 100vh; */
    display: flex;
    flex-direction: column;
    position: relative;
    padding: 0.5em;
}




#content > section h1, #content > section h2 {
    font-family: 'AmaticSC-Regular';
    text-align: center;
}

#content > section h1 {
    font-size: 2em;
    margin: 0 0 0.25em 0;
    border-bottom: 0.0125em solid var(--text-color);
}

#content > section h2 {
    margin: 1em 0 0 0;
    font-size: 1.25em;
}
/* #endregion */

/* #region summary */
#summary {
    background: #EEE;
    color: #333;
    padding: 2em 0 126px 0 !important;
    font-size: 0.85em;
    width: 100%;
}
#summary div {
    padding: 0 1em;
    max-width: 560px;
    margin: 0 auto;
}
#summary b {
    background: yellow;
    color: black;
    padding: 0 0.25em;
}
/* #endregion */

/* #region about */
#about {
    background: white;
}
/* #endregion */

/* #region skills */
#skills {
    padding-top: 0.5em;
    position: relative;
    background: #222;
    color: white;
}
/* #endregion */

/* #region projects */
#projects {
    background: #EEE;
}
#projects h3 { 
    text-align: center;
    margin: 0;
    text-decoration: underline;
}
#projects .grid {
    display: grid;
    padding: 0.5em 1em 0 1em;
    gap: 1em;
}

#projects .games {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 200px 200px;
}
#projects .demos {
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-rows: 200px 200px;
}
#projects .frameworks {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 200px;
    padding-bottom: 1em;
}
@media screen and (max-width: 720px) {
    #projects .games {
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 150px 150px 150px;
    }
    #projects .demos {
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 150px 150px 150px 150px;
    }
    #projects .frameworks {
        grid-template-columns: 1fr;
        grid-template-rows: 150px 150px 150px;
    }
}
#projects .grid > div {
    background: #aaa;
    border: 1px solid black;

    border-radius: 4px;
    box-shadow: 0px 0px 5px 1px #333;
    display: flex;
    align-items: center;
    justify-content: center;
}
/* #endregion */
/* #region contact */
#contact {
    text-align: center;
    background: white;
}
#send {
    font-size: 1em;
    min-width: 8em;
}
/* #endregion */



/* #region buttons */
button.material-icons {
    outline: none;
    border: none;
    background: none;
    font-size: 2em;
}
.outline-button {
    background: none;
    outline: none;
    border: .05em solid var(--text-color);
    color: var(--text-color);
    border-radius: .2em;
    padding: 0em 1em 0em 1em;
    font-family: 'AmaticSC-Regular';
    font-weight: bold;
    cursor: pointer;
}
@media (hover:hover) {
    .outline-button:hover {
        background: var(--text-color);
        color: white;
    }
}
/* #endregion util */




/* #region glitch */

@keyframes super-glitch {
    0% { transform: rotateX(0) skewX(0); }
    1% { transform: rotateX(10deg) skewX(90deg); }
    2% { transform: rotateX(0) skewX(0); }
}



.glitch {
    position: relative;
    color: white;
    font-size: 4em;
}

.glitch::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: 2px;
    text-shadow: -2px 0 red;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-before 5s infinite linear alternate-reverse;
}

.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px red;
    animation: glitch-after 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-before {
    0% {
        clip: rect(59px, 9999px, 42px, 0);
        transform: skew(0.67deg);
    }

    5% {
        clip: rect(62px, 9999px, 95px, 0);
        transform: skew(0.97deg);
    }

    10% {
        clip: rect(59px, 9999px, 54px, 0);
        transform: skew(0.6deg);
    }

    15% {
        clip: rect(40px, 9999px, 68px, 0);
        transform: skew(0.02deg);
    }

    20% {
        clip: rect(63px, 9999px, 99px, 0);
        transform: skew(0.73deg);
    }

    25% {
        clip: rect(14px, 9999px, 60px, 0);
        transform: skew(0.13deg);
    }

    30% {
        clip: rect(61px, 9999px, 49px, 0);
        transform: skew(0.05deg);
    }

    35% {
        clip: rect(15px, 9999px, 58px, 0);
        transform: skew(0.05deg);
    }

    40% {
        clip: rect(22px, 9999px, 88px, 0);
        transform: skew(0.15deg);
    }

    45% {
        clip: rect(54px, 9999px, 54px, 0);
        transform: skew(0.32deg);
    }

    50% {
        clip: rect(45px, 9999px, 68px, 0);
        transform: skew(0.48deg);
    }

    55% {
        clip: rect(85px, 9999px, 33px, 0);
        transform: skew(0.58deg);
    }

    60% {
        clip: rect(25px, 9999px, 1px, 0);
        transform: skew(0.06deg);
    }

    65% {
        clip: rect(45px, 9999px, 86px, 0);
        transform: skew(0.84deg);
    }

    70% {
        clip: rect(98px, 9999px, 64px, 0);
        transform: skew(0.67deg);
    }

    75% {
        clip: rect(84px, 9999px, 49px, 0);
        transform: skew(0.04deg);
    }

    80% {
        clip: rect(2px, 9999px, 93px, 0);
        transform: skew(0.32deg);
    }

    85% {
        clip: rect(86px, 9999px, 89px, 0);
        transform: skew(0.61deg);
    }

    90% {
        clip: rect(94px, 9999px, 48px, 0);
        transform: skew(0.19deg);
    }

    95% {
        clip: rect(73px, 9999px, 80px, 0);
        transform: skew(0.21deg);
    }

    100% {
        clip: rect(81px, 9999px, 100px, 0);
        transform: skew(0.91deg);
    }
}

@keyframes glitch-after {
    0% {
        clip: rect(83px, 9999px, 43px, 0);
        transform: skew(0.83deg);
    }

    5% {
        clip: rect(31px, 9999px, 54px, 0);
        transform: skew(0.17deg);
    }

    10% {
        clip: rect(56px, 9999px, 44px, 0);
        transform: skew(0.03deg);
    }

    15% {
        clip: rect(25px, 9999px, 62px, 0);
        transform: skew(0.31deg);
    }

    20% {
        clip: rect(37px, 9999px, 57px, 0);
        transform: skew(0.56deg);
    }

    25% {
        clip: rect(63px, 9999px, 25px, 0);
        transform: skew(0.38deg);
    }

    30% {
        clip: rect(7px, 9999px, 14px, 0);
        transform: skew(0.66deg);
    }

    35% {
        clip: rect(20px, 9999px, 64px, 0);
        transform: skew(0.39deg);
    }

    40% {
        clip: rect(4px, 9999px, 38px, 0);
        transform: skew(0.15deg);
    }

    45% {
        clip: rect(21px, 9999px, 4px, 0);
        transform: skew(0.28deg);
    }

    50% {
        clip: rect(93px, 9999px, 61px, 0);
        transform: skew(0.79deg);
    }

    55% {
        clip: rect(85px, 9999px, 36px, 0);
        transform: skew(0.67deg);
    }

    60% {
        clip: rect(7px, 9999px, 27px, 0);
        transform: skew(1deg);
    }

    65% {
        clip: rect(18px, 9999px, 94px, 0);
        transform: skew(0.94deg);
    }

    70% {
        clip: rect(92px, 9999px, 77px, 0);
        transform: skew(0.73deg);
    }

    75% {
        clip: rect(9px, 9999px, 96px, 0);
        transform: skew(0.29deg);
    }

    80% {
        clip: rect(14px, 9999px, 98px, 0);
        transform: skew(0.67deg);
    }

    85% {
        clip: rect(13px, 9999px, 99px, 0);
        transform: skew(0.82deg);
    }

    90% {
        clip: rect(58px, 9999px, 45px, 0);
        transform: skew(0.29deg);
    }

    95% {
        clip: rect(77px, 9999px, 51px, 0);
        transform: skew(0.34deg);
    }

    100% {
        clip: rect(20px, 9999px, 77px, 0);
        transform: skew(0.03deg);
    }
}

@keyframes glitch-skew {
    0% {
        transform: skew(4deg);
    }

    10% {
        transform: skew(4deg);
    }

    20% {
        transform: skew(-4deg);
    }

    30% {
        transform: skew(0deg);
    }

    40% {
        transform: skew(4deg);
    }

    50% {
        transform: skew(3deg);
    }

    60% {
        transform: skew(-2deg);
    }

    70% {
        transform: skew(5deg);
    }

    80% {
        transform: skew(3deg);
    }

    90% {
        transform: skew(0deg);
    }

    100% {
        transform: skew(-1deg);
    }
}
/* #endregion */

/* #region dividers */
.divide { position: relative; }
.divide.before { padding-top: 126px !important; }
.divide.after { padding-bottom: 126px !important; }
.divide.before::before, .divide.after::after {
    content: "";
    width: 100%;
    height: 126px;
    background-position: top center;
    background-size: 100% 126px;
    position: absolute;
    left: 0;
    right: 0;
}
.divide.after::after { bottom: 0; z-index: 2; }
.divide.before::before { top: 0; }

.divide.before.white::before, .divide.after.white::after { background-image: url(img/dividers/white.png); }
.divide.before.gray::before, .divide.after.gray::after  { background-image: url(img/dividers/gray.png); }
.divide.before.red::before, .divide.after.red::after  { background-image: url(img/dividers/red.png); }

@media screen and (max-width: 900px) {
    .divide.before::before, .divide.after::after {
        height: 80px;
        background-size: 100% 80px;
        margin-top: -80px;
    }
}

@media screen and (max-width: 600px) {
    .divide.before::before, .divide.after::after {
        height: 50px;
        background-size: 100% 50px;
        margin-top: -50px;
    }
}
/* #endregion */




/* #region LOADER */
#loader {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 99;
    animation: fadeout 0.5s 0.85s;
    animation-fill-mode: forwards;
}
#loader .inner {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    text-align: center;
}

/* background sliding out */
#loader .slide-up, #loader .slide-down {
    background-color: #29abe2;
    left: 0;
    height: 50%;
    width: 100%;
}
#loader .slide-up {
    top: 0;
    transform-origin: top;
    animation-delay: 2s;
    animation: slideup 0.33s ease-out 1s;
    animation-fill-mode: forwards;
}
@keyframes slideup {
    from { transform: scaleY(1); opacity: 1; }
    to { transform: scaleY(0); opacity: 0; }
}
#loader .slide-down {
    bottom: 0;
    transform-origin: bottom;
    animation: slidedown 0.33s ease-out 1s;
    animation-fill-mode: forwards;
}
@keyframes slidedown {
    from { transform: scaleY(1); opacity: 1; }
    to { transform: scaleY(0); opacity: 0; }
}

/* text sliding */
#loader .text {
    color: white;
    position: absolute;
    text-align:center;
    width: 100%;
    margin: auto;
    top: calc(50% - 15px);
}

#loader .text > span {
    position: relative;
    font: 50px Lato, sans-serif;
    display: block;
}
#loader .text > span:first-child {
    animation: slideright 1s ease;
    transform: translateX(-100px);
    animation-fill-mode: forwards;
}
@keyframes slideright {
    from { transform: translateX(-100px); }
    to { transform: translateX(-10px); }
}
#loader .text > span:last-child {
    animation: slideleft 1s ease;
    transform: translateX(100px);
    animation-fill-mode: forwards;
}
@keyframes slideleft {
    from { transform: translateX(100px); }
    to { transform: translateX(0px); }
}

#loader .fade-bg {
    animation: fadeout 0.5s 0.45s;
    background-color: black; /*#48C187;*/
    animation-fill-mode: forwards;
}
#loader .inner, #loader .text {
    animation: fadeout 0.5s 0.65s;
    animation-fill-mode: forwards;
}
@keyframes fadeout {
    from { opacity:1; }
    to { opacity:0; visibility: hidden; }
}


/* ROTATING SQUARE LOADER */
#loader .inner > i {
    top: calc(50% - 100px);
    display: block;
    margin: auto;
    width: 49px;
    height: 49px;
    position: relative;
    border: 7px solid white;
    animation: square-rotate 2s infinite ease;
}
#loader .inner > i > i {
    vertical-align: top;
    display: inline-block;
    width: 100%;
    background-color: white;
    animation: square-flipflop 2s infinite ease-in;
}

@keyframes square-rotate {
    0% { transform: rotate(0deg); }
    25% { transform: rotate(180deg); }
    50% { transform: rotate(180deg); }
    75% { transform: rotate(360deg); }
    100% { transform: rotate(360deg); }
}
@keyframes square-flipflop {
    0% { height: 0%; }
    25% { height: 0%; }
    50% { height: 100%; }
    75% { height: 100%; }
    100% { height: 0%; }
}
/* #endregion */


/* #region footer */
#footer {
    text-align: center;
    background: #333;
    padding: 1em;
    font-size: 2em;
}
#footer2 {
    background: black;
    color: white;
    padding: 3em;
}
/* #endregion */



